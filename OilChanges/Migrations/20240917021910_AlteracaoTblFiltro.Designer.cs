// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OilChanges.Context;

#nullable disable

namespace OilChanges.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240917021910_AlteracaoTblFiltro")]
    partial class AlteracaoTblFiltro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OilChanges.Shared.Model.Filtro", b =>
                {
                    b.Property<int>("FiltroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiltroId"));

                    b.Property<int?>("CapacidadeDeFiltragem")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Compatibilidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeFabricacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeValidade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PressaoMaximaDeOperacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiltroId");

                    b.ToTable("Filtros");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.Oleo", b =>
                {
                    b.Property<int>("OleoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OleoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoOleo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("OleoId");

                    b.ToTable("Oleos");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.TrocaOleo", b =>
                {
                    b.Property<int>("TrocaOleoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrocaOleoId"));

                    b.Property<DateTime?>("DataProximaTroca")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiltroId")
                        .HasColumnType("int");

                    b.Property<decimal>("KmAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KmProximaTroca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OleoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeOleo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("TrocaOleoId");

                    b.HasIndex("FiltroId");

                    b.HasIndex("OleoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("TrocaOleos");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.Veiculo", b =>
                {
                    b.Property<int>("VeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VeiculoId"));

                    b.Property<int?>("AnoFabricacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VeiculoId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.TrocaOleo", b =>
                {
                    b.HasOne("OilChanges.Shared.Model.Filtro", "Filtro")
                        .WithMany("TrocaOleos")
                        .HasForeignKey("FiltroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OilChanges.Shared.Model.Oleo", "Oleo")
                        .WithMany("TrocaOleos")
                        .HasForeignKey("OleoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OilChanges.Shared.Model.Veiculo", "Veiculo")
                        .WithMany("TrocaOleos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filtro");

                    b.Navigation("Oleo");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.Filtro", b =>
                {
                    b.Navigation("TrocaOleos");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.Oleo", b =>
                {
                    b.Navigation("TrocaOleos");
                });

            modelBuilder.Entity("OilChanges.Shared.Model.Veiculo", b =>
                {
                    b.Navigation("TrocaOleos");
                });
#pragma warning restore 612, 618
        }
    }
}
