@page "/oleo"
@using OilChanges.Client.Services
@using OilChanges.Shared.DTOs
@inject IOleoService oleoService

<h3>Oleos Cadastrados</h3>

<table class="table">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Tipo</th>            
        </tr>
    </thead>
    <tbody>
        @if (oleos != null)
        {
            @foreach (var oleo in oleos)
            {
                <tr>
                    <td class="text-uppercase">@oleo.Nome</td>
                    <td class="text-uppercase">@oleo.TipoOleo</td>
                    <td><a class="btn btn-primary" href="/editoleo/@oleo.OleoId">Editar</a> </td>
                    <td><a class="btn btn-danger" @onclick="@(() => DeletaConfirma(oleo.OleoId))" style="color:white">Deletar</a> </td>
                </tr>
            }
        }
        else
        {
            <p>Carregando...</p>
        }
    </tbody>
</table>

<hr />
<Confirma @ref="confirma" onCancela="@CancelaConfirma" onConfirma="@DeletaOleo">
    <div>Deseja realmente excluir este item?</div>
</Confirma>

<ExibeErro @ref="erro" ErrorMessage=@erroMsg></ExibeErro>

@code {    
    Confirma confirma;
    ExibeErro erro;
    private string erroMsg = "";
    private int idOleo;
    private List<OleoDTO> oleos;

    protected override async Task OnInitializedAsync()
    {
        await CarregaOleos();
    }

    async Task CarregaOleos()
    {
        try
        {
            oleos = await oleoService.GetOleos();
        }
        catch (Exception ex)
        {
            // Log ou exiba a mensagem de erro
            
        }
    }

    void DeletaConfirma(int id)
    {
        confirma.Exibir();
        idOleo = id;
    }

    async Task DeletaOleo()
    {
        try
        {
            await oleoService.DeleteOleo(idOleo);
            confirma.Ocultar();
            await CarregaOleos();
        }
        catch (Exception ex)
        {
            erroMsg = $"Erro ao carregar os oleos: {ex.Message}";
        }
        
    }

    void CancelaConfirma()
    {
        confirma.Ocultar();
    }

}
